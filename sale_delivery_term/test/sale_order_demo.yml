-
  In order to test process of the Sale Order, I create sale order
-
  !record {model: sale.order, id: sale_order_test1}:
    partner_id: base.res_partner_2
    note: Invoice after delivery
    payment_term: account.account_payment_term
    master_order_line: 
      - product_id: product.product_product_7
        product_uom_qty: 8
        delivery_term_id: sale_delivery_term_1
-
  I verify that the onchange was correctly triggered
-
  !assert {model: sale.order, id: sale_order_test1, string: The onchange function of product was not correctly triggered}:
    - master_order_line[0].name == u'[LCD17] 17\u201d LCD Monitor'
    - master_order_line[0].price_unit == 1350.0
    - master_order_line[0].product_uom_qty == 8
    - master_order_line[0].product_uom.id == ref('product.product_uom_unit')

-
  I create another sale order
-
  !record {model: sale.order, id: sale_order_test2}:
    partner_id: base.res_partner_2
    master_order_line: 
      - product_id: product.product_product_7
        product_uom_qty: 16
        product_uom: product.product_uom_dozen
        delivery_term_id: sale_delivery_term_1
-
  I verify that the onchange was correctly triggered
-
  !assert {model: sale.order, id: sale_order_test2, string: The onchange function of product was not correctly triggered}:
    - master_order_line[0].name == u'[LCD17] 17\u201d LCD Monitor'
    - master_order_line[0].price_unit == 1350.0 * 12
    - master_order_line[0].product_uom.id == ref('product.product_uom_dozen')
    - master_order_line[0].product_uom_qty == 16

-
  I create the detailed order lines
-
   !python {model: sale.order}: |
     for line in self.browse(cr, uid, ref('sale_order_test2')).master_order_line:
       line.generate_detailed_lines()

-
  I confirm the Quotation
-
  !workflow {model: sale.order, action: order_confirm, ref: sale_order_test2}
