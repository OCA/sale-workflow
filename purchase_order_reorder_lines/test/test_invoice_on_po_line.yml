-
  Create purchase_order
-
  !record {model: purchase.order, id: purchase_order_8}:
    partner_id: base.res_partner_22
    order_line:
      - product_id: product.product_product_38
        price_unit: 58
        product_qty: 9
      - product_id: product.product_product_39
        product_qty: 3
        price_unit: 65
      - product_id: product.product_product_44
        product_qty: 4
        price_unit: 154.5
-
  I check default sequence value
-
  !python {model: purchase.order}: |
    invoice_line_obj = self.pool.get('purchase.order.line_invoice')
    purchase_order = self.browse(cr, uid, ref("purchase_order_8"))
    for line in purchase_order.order_line:
      assert line.sequence == 0, "Sequence should be 0 on all lines"
-
  I confirm purchase order which has invoicing control method "Based on Purchase Order Lines".
-
  !workflow {model: purchase.order, action: purchase_confirm, ref: purchase_order_8}
-
  In order to test create invoice for purchase order line.
-
  !python {model: purchase.order}: |
    invoice_line_obj = self.pool.get('purchase.order.line_invoice')
    purchase_order = self.browse(cr, uid, ref("purchase_order_8"))
    context.update({'active_model': 'purchase.order', 'active_ids': [ref("purchase_order_8")]})
    for purchase_line in purchase_order.order_line:
        invoice_line_obj.makeInvoices(cr, uid, purchase_line.id, context=context)
-
  I check the invoice of order.
-
  !python {model: purchase.order}: |
    purchase_order = self.browse(cr, uid, ref("purchase_order_8"))
    for purchase_line in purchase_order.order_line:
      assert len(purchase_order.invoice_ids) == 1, "Invoice should be generated."
      for inv_line in purchase_line.invoice_lines:
        assert purchase_line.sequence == inv_line.sequence, "Sequences should be the same"
